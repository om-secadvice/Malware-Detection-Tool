RESULTS FILE - results.csv

##########################################################################################################################################################################
Test classifier
##########################################################################################################################################################################
    Command To test classifier:
        python -W ignore  MalwareDetection.py 'path to base directory of test dataset'

        For example:
            python -W ignore  MalwareDetection.py /mnt/D/C3I_TEST_DATASET/
        
        
##########################################################################################################################################################################
Train Classifiers on Dynamic Data
##########################################################################################################################################################################
    Command To Train Dynamic Data Classifiers:
        python train_dynamic_classifiers.py

        Note:
            Set DIR_PATH, DYNAMIC_DIR, BENIGN_DIR, MALWARE_DIR variables to appropriate path values in train_dynamic_classifiers.py

            For example:        
                DIR_PATH = '/mnt/D/C3iHackathonDataset/'
                DYNAMIC_DIR = 'dynamic'
                BENIGN_DIR = 'Benign'
                MALWARE_DIR = 'Malware'
  

##########################################################################################################################################################################
Train Classifiers on Static Data
##########################################################################################################################################################################
    1. Extract static features:
        Uncomment these lines in strings_model.py
            # save_string_dataset()
            # clf = train()
            # validation(clf)
        Recomment for testing
        Command: 
            python extract_static_features.py
            
            Note: 
                Set values of DIRECTORIES_TO_SCAN, MALWARE_DIRS in extract_static_features.py
                
                For example:
                    DIRECTORIES_TO_SCAN = ['/mnt/D/C3iHackathonDataset/static/Benign']
                    MALWARE_DIRS = ['/mnt/D/C3iHackathonDataset/static/Malware/'+i for i in ['Virus','Worm','Backdoor','Trojan','TrojanDropper','TrojanDownloader']]
                    DIRECTORIES_TO_SCAN.extend(MALWARE_DIRS)
                    OUTPUT_DIR = '/mnt/D/C3iHackathonDataset/static/merged'
                    META_DIR = '/mnt/D/C3iHackathonDataset/static/meta'
                    
    2. Train classifier for static features:
        Command:
            python static_features_model.py
            
            Note:
                Set value of INPUT_DIR, META_DIR. The value of INPUT_DIR in this step must be same as OUTPUT_DIR in Step 1 and value META_DIR must be same as in Step 1.
                
                For example:
                    INPUT_DIR = '/mnt/D/C3iHackathonDataset/static/merged'
                    META_DIR = '/mnt/D/C3iHackathonDataset/static/meta'
                    
    3. Train classifier for string feature:
        Uncomment these lines in strings_model.py
            # save_string_dataset()
            # clf = train()
            # validation(clf)
        Recomment for testing
        Command:
            python strings_model.py
            
            Note:
                Set value of INPUT_DIR. The value of INPUT_DIR in this step must be same as OUTPUT_DIR in Step 1.
                
                For Example:
                    INPUT_DIR = '/mnt/D/C3iHackathonDataset/static/merged'
                    

######################################################################################
################################### REQUIREMENTS #####################################
######################################################################################
1. python 3.7.6
2. Install Dependencies 
        Command: pip install -r requirements.txt
3. NOTE:- xgboost version MUST be 1.0.2
