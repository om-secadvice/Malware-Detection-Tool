import json
import os
import csv

from sklearn.metrics import confusion_matrix
from sklearn.metrics import classification_report

# benign_json = json.load(open(os.path.join('network_protocol_count_analysis', 'benign_feature_dict.json')))
# # benign_json = json.load(open(os.path.join('network_protocol_count_analysis', 'malware_feature_dict.json')))

# protocols = ['dead_hosts', 'http', 'icmp', 'irc', 'mitm', 'smtp', 'tcp','tls', 'udp']
# count = [0] * len(protocols)

# total = 0.0
# for key in benign_json:
#     i = 0
#     for index in benign_json[key]:
#         count[i] += index > 0 #+= index
#         i += 1
#     total += 1

# for index in range(len(count)):
#     count[index] /= total
#     count[index] *= 100

# print(count)

prediction_labels_file = 'result.csv'
groundtruth_labels_file = 'validation_data.csv'

label_to_index = {'Benign' : 0, 'Malware' : 1}

result = []
with open(prediction_labels_file, newline='') as f:
    reader = csv.reader(f)
    result = list(reader)
    
validation_data = []
with open(groundtruth_labels_file, newline='') as f:
    reader = csv.reader(f)
    validation_data = list(reader)
    
y_pred = []
y_true = []

for result_row in result:
    for validation_row in validation_data:
#         print(result[0])
#         print(validation_row[0])
        if result_row[0] == validation_row[0]:
            y_pred.append(label_to_index[result_row[1]])
            y_true.append(int(validation_row[2]))
            break
            
print('---------------------------------------------------------------------------------')
print('Confusion Matrix')
print('---------------------------------------------------------------------------------')
print(confusion_matrix(y_true, y_pred))

print('---------------------------------------------------------------------------------')
print('Classification Report')
print('---------------------------------------------------------------------------------')
print(classification_report(y_true, y_pred, labels=[0, 1]))
    
